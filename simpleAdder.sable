Package Jalice ; 
     
Helpers 
    digito = ['0' .. '9']; 
    letra_minuscula = ['a' .. 'z'] ; 
    letra_maiuscula = ['A' .. 'Z'] ; 
    letra = letra_minuscula | letra_maiuscula ; 
	under = '_' ;
	esp = 32 ;
	tab = 9 ;
	nl = 10 ;
	cr = 13 ;
	aspa = ''' ;
	barra = '\' ;
	caracter_id = digito | letra | under ;
	
Tokens	
	comentario_bloco = '/**/';
	abrecomentario = '/*' ;
    fechacomentario = '*/' ;
	barra_inv = barra+;
	espaco = esp ;
	nova_linha = (nl | cr)+;
	tecla_tab = tab ;
	string = 'caractere' ;
	real = 'real';
	inteiro = 'inteiro';
	programa = 'programa';
	inicio = 'inicio';
	fimprograma = 'fim.';
	se = 'se';
	senao = 'senao';
	enquanto = 'enquanto';
	para = 'para';
	avalie = 'avalie';
	caso = 'caso';
	verdadeiro = 'verdadeiro';
	falso = 'falso';
	booleano = 'booleano';
	nao = 'nao';
	e = 'e';
	ou = 'ou';
	a_parentese = '(';
	f_parentese = ')';
	atrib = '<-';
	doispontos = ':';
	maior = '>';
	menorq = '<';
	diferente = '<>';
	igual = '=';
	menor_igual = '(menor)(igual)';
	maior_igual = '(maior)(igual)';
	mais = '+';
	menos = '-';
	multi = '*';
	div = '/';
	virg = ',';
	pontoevirg = ';' ;
	abre_colchete = '[';
    fecha_colchete = ']';
	comentario_linha = '//+';
    char = ((aspa) + (caracter_id | esp) + (aspa));
    num = digito+ ;
    num_real = digito+ (',') digito+ ;
    leia = 'leia';
    escreva = 'escreva';
    id = (letra | under)(caracter_id)* ; 
    
Ignored Tokens
    espaco, tecla_tab, nova_linha;
       
Productions
    gramatica = programa id inicio declaracao? fimprograma;
    
    declaracao = {inteiro} inteiro doispontos id declnum* pontoevirg |
    			{real} real doispontos id declnum* pontoevirg;
    
    declnum = virg id;
    
    
    
    