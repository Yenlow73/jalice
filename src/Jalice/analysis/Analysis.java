/* This file was generated by SableCC (http://www.sablecc.org/). */

package Jalice.analysis;

import Jalice.node.*;

public interface Analysis extends Switch
{
    Object getIn(Node node);
    void setIn(Node node, Object o);
    Object getOut(Node node);
    void setOut(Node node, Object o);

    void caseTBarraInv(TBarraInv node);
    void caseTEspaco(TEspaco node);
    void caseTTeclaTab(TTeclaTab node);
    void caseTTipoCaractere(TTipoCaractere node);
    void caseTTipoReal(TTipoReal node);
    void caseTTipoInteiro(TTipoInteiro node);
    void caseTComandoInicio(TComandoInicio node);
    void caseTComandoFim(TComandoFim node);
    void caseTSe(TSe node);
    void caseTSenao(TSenao node);
    void caseTEnquanto(TEnquanto node);
    void caseTPara(TPara node);
    void caseTAvalie(TAvalie node);
    void caseTCaso(TCaso node);
    void caseTVerdadeiro(TVerdadeiro node);
    void caseTFalso(TFalso node);
    void caseTBooleano(TBooleano node);
    void caseTNao(TNao node);
    void caseTE(TE node);
    void caseTOu(TOu node);
    void caseTAbreParent(TAbreParent node);
    void caseTFechaParent(TFechaParent node);
    void caseTAtribuicao(TAtribuicao node);
    void caseTDoisPontos(TDoisPontos node);
    void caseTMaior(TMaior node);
    void caseTMenor(TMenor node);
    void caseTIgual(TIgual node);
    void caseTMenorIgual(TMenorIgual node);
    void caseTMaiorIgual(TMaiorIgual node);
    void caseTSoma(TSoma node);
    void caseTSub(TSub node);
    void caseTMulti(TMulti node);
    void caseTDiv(TDiv node);
    void caseTNl(TNl node);
    void caseTPVirgula(TPVirgula node);
    void caseTAbreColchete(TAbreColchete node);
    void caseTFechaColchete(TFechaColchete node);
    void caseTComentarioLinha(TComentarioLinha node);
    void caseTAbrecomentario(TAbrecomentario node);
    void caseTFechacomentario(TFechacomentario node);
    void caseTCaractere(TCaractere node);
    void caseTNumInt(TNumInt node);
    void caseTNumReal(TNumReal node);
    void caseTId(TId node);
    void caseEOF(EOF node);
    void caseInvalidToken(InvalidToken node);
}
