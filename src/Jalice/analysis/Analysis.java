/* This file was generated by SableCC (http://www.sablecc.org/). */

package Jalice.analysis;

import Jalice.node.*;

public interface Analysis extends Switch
{
    Object getIn(Node node);
    void setIn(Node node, Object o);
    Object getOut(Node node);
    void setOut(Node node, Object o);

    void caseStart(Start node);
    void caseAGramatica(AGramatica node);
    void caseAInteiroDeclaracao(AInteiroDeclaracao node);
    void caseARealDeclaracao(ARealDeclaracao node);
    void caseADeclnum(ADeclnum node);

    void caseTComentarioBloco(TComentarioBloco node);
    void caseTAbrecomentario(TAbrecomentario node);
    void caseTFechacomentario(TFechacomentario node);
    void caseTBarraInv(TBarraInv node);
    void caseTEspaco(TEspaco node);
    void caseTNovaLinha(TNovaLinha node);
    void caseTTeclaTab(TTeclaTab node);
    void caseTString(TString node);
    void caseTReal(TReal node);
    void caseTInteiro(TInteiro node);
    void caseTPrograma(TPrograma node);
    void caseTInicio(TInicio node);
    void caseTFimprograma(TFimprograma node);
    void caseTSe(TSe node);
    void caseTSenao(TSenao node);
    void caseTEnquanto(TEnquanto node);
    void caseTPara(TPara node);
    void caseTAvalie(TAvalie node);
    void caseTCaso(TCaso node);
    void caseTVerdadeiro(TVerdadeiro node);
    void caseTFalso(TFalso node);
    void caseTBooleano(TBooleano node);
    void caseTNao(TNao node);
    void caseTE(TE node);
    void caseTOu(TOu node);
    void caseTAParentese(TAParentese node);
    void caseTFParentese(TFParentese node);
    void caseTAtrib(TAtrib node);
    void caseTDoispontos(TDoispontos node);
    void caseTMaior(TMaior node);
    void caseTMenorq(TMenorq node);
    void caseTDiferente(TDiferente node);
    void caseTIgual(TIgual node);
    void caseTMenorIgual(TMenorIgual node);
    void caseTMaiorIgual(TMaiorIgual node);
    void caseTMais(TMais node);
    void caseTMenos(TMenos node);
    void caseTMulti(TMulti node);
    void caseTDiv(TDiv node);
    void caseTVirg(TVirg node);
    void caseTPontoevirg(TPontoevirg node);
    void caseTAbreColchete(TAbreColchete node);
    void caseTFechaColchete(TFechaColchete node);
    void caseTComentarioLinha(TComentarioLinha node);
    void caseTChar(TChar node);
    void caseTNum(TNum node);
    void caseTNumReal(TNumReal node);
    void caseTLeia(TLeia node);
    void caseTEscreva(TEscreva node);
    void caseTId(TId node);
    void caseEOF(EOF node);
    void caseInvalidToken(InvalidToken node);
}
